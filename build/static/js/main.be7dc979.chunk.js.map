{"version":3,"sources":["firebase/firebase-config.js","types/types.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","JournalApp.js","reducers/authReducer.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","databaseURL","REACT_APP_databaseURL","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","measurementId","REACT_APP_measurementId","firebase","initializeApp","firestore","auth","GoogleAuthProvider","types","initialState","loading","msgError","notes","active","require","createStore","combineReducers","applyMiddleware","compose","JournalApp","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","thunk","ReactDom","render","document","getElementById"],"mappings":"kOAGMA,G,YAAiB,CACnBC,OAAOC,mHAAYC,iBACnBC,WAAWF,mHAAYG,qBACvBC,YAAYJ,mHAAYK,sBACxBC,UAAUN,mHAAYO,oBACtBC,cAAcR,mHAAYS,wBAC1BC,kBAAkBV,mHAAYW,4BAC9BC,MAAMZ,mHAAYa,gBAClBC,cAAcd,mHAAYe,0BAuB9BC,IAASC,cAAcnB,GAGZkB,IAASE,YAEC,IAAIF,IAASG,KAAKC,mB,WAFvC,I,OCpCaC,G,MACH,gBADGA,EAEF,gBAFEA,EAIE,gBAJFA,EAKA,mBALAA,EAOO,qBAPPA,EAQQ,sBARRA,EAUI,mBAVJA,EAWI,yBAXJA,EAYE,qBAZFA,EAaI,sBAbJA,EAeI,sBAfJA,EAgBY,0B,kCCfnBC,EAAe,CACjBC,SAAS,EACTC,SAAU,M,QCFRF,EAAe,CACjBG,MAAO,GACPC,OAAQ,M,ECAqDC,EAAQ,IAAjEC,E,EAAAA,YAAYC,E,EAAAA,gBAAiBC,E,EAAAA,gBAAgBC,E,EAAAA,QCCxCC,GDUOJ,EARHC,EAAgB,CAC7BV,KENuB,WAAsB,IAArBc,EAAoB,uDAAd,GAAGC,EAAW,uCACxC,OAAQA,EAAOC,MACX,KAAKd,EACD,MAAO,CACHe,IAAIF,EAAOG,QAAQD,IACnBE,KAAKJ,EAAOG,QAAQE,aAE5B,KAAKlB,EACD,MAAO,GACX,QACI,OAAOY,IFHnBO,GFFqB,WAAmC,IAAlCP,EAAiC,uDAAzBX,EAAcY,EAAW,uCACvD,OAAQA,EAAOC,MACX,KAAKd,EACD,OAAO,2BACAY,GADP,IAEIT,SAAUU,EAAOG,UAEzB,KAAKhB,EACD,OAAO,2BACAY,GADP,IAEIT,SAAU,OAElB,KAAKH,EAKL,KAAKA,EACD,OAAO,2BACAY,GADP,IAEIV,QAASW,EAAOG,UAGxB,QACI,OAAOJ,IErBfR,MDHwB,WAAmC,IAAlCQ,EAAiC,uDAAzBX,EAAcY,EAAW,uCAC1D,OAAQA,EAAOC,MACX,KAAKd,EACD,OAAO,2BACAY,GADP,IAEIP,OAAO,eACAQ,EAAOG,WAGtB,KAAKhB,EACD,kCACOY,GADP,IAEIR,MAAM,CAACS,EAAOG,SAAT,mBAAoBJ,EAAMR,UAEvC,KAAKJ,EACD,kCACOY,GADP,IAEIR,MAAM,YAAIS,EAAOG,WAEzB,KAAKhB,EACD,kCACOY,GADP,IAGIR,MAAMQ,EAAMR,MAAMgB,KACd,SAAAC,GAAI,OAAGA,EAAKC,KAAOT,EAAOG,QAAQM,GAC5BT,EAAOG,QAAQK,KAChBA,OAIjB,KAAKrB,EACD,kCACOY,GADP,IAEIP,OAAO,KACPD,MAAMQ,EAAMR,MAAMmB,QAAO,SAAAF,GAAI,OAAGA,EAAKC,KAAOT,EAAOG,aAE3D,KAAKhB,EACD,kCACOY,GADP,IAEIP,OAAO,KACPD,MAAM,KAGd,QACI,OAAOQ,OCtCyB,qBAAXY,QAA0BA,OAAOC,sCAAyCf,GAMnGD,EAAgBiB,OCdE,c,OEA1BC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.be7dc979.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nconst firebaseConfig = {\n    apiKey:process.env.REACT_APP_apiKey,\n    authDomain:process.env.REACT_APP_authDomain,\n    databaseURL:process.env.REACT_APP_databaseURL,\n    projectId:process.env.REACT_APP_projectId,\n    storageBucket:process.env.REACT_APP_storageBucket,\n    messagingSenderId:process.env.REACT_APP_messagingSenderId,\n    appId:process.env.REACT_APP_appId,\n    measurementId:process.env.REACT_APP_measurementId,\n};\n// //para testing usamos otra base de datos(mira variables de entorno)\n// const firebaseConfigTesting = {\n//     apiKey: \"AIzaSyCwngfRDv56ILjsUj6dxyvBQRM-MuFrcWg\",\n//     authDomain: \"test-appreact.firebaseapp.com\",\n//     databaseURL: \"https://test-appreact.firebaseio.com\",\n//     projectId: \"test-appreact\",\n//     storageBucket: \"test-appreact.appspot.com\",\n//     messagingSenderId: \"392050295203\",\n//     appId: \"1:392050295203:web:03941c7ec4adb85c091a16\",\n//     measurementId: \"G-ME6QN4ZR7B\"\n// };\n// //si estamos en testing usamos una o sino la otra\n// if (process.env.NODE_ENV === 'test') {\n//     firebase.initializeApp(firebaseConfigTesting)\n\n// } else {\n\n//     // Initialize Firebase\n//     firebase.initializeApp(firebaseConfig);\n// }\n\nfirebase.initializeApp(firebaseConfig);\n\n//referencia a la base de datos\nconst db = firebase.firestore()\n//referencia al auth(puede ser varias)\nvar googleProvider = new firebase.auth.GoogleAuthProvider();\n\nexport {\n    db,\n    googleProvider,\n    firebase\n}","\nexport const types={\n    login:'[auth] login',\n    logout:'[auth] logout',\n\n    uiSetError:'[ui] setError',\n    uiRemove:'[ui] removeError',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n    \n    notesAddNew: '[Notes] New Note',\n    notesActive: '[Notes] Set actve note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdate: '[Notes] Update note',\n    notesFileUrl: '[Notes] Update image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\n}","import { types } from '../types/types';\n\nconst initialState = {\n    loading: false,\n    msgError: null,\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        case types.uiRemove:\n            return {\n                ...state,\n                msgError: null,\n            }\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: action.payload\n            }\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: action.payload\n            }\n\n        default:\n            return state;\n    }\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    notes: [],\n    active: null,\n}\n\nexport const notesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        case types.notesAddNew:\n            return{\n                ...state,\n                notes:[action.payload,...state.notes]\n            }\n        case types.notesLoad:\n            return{\n                ...state,\n                notes:[...action.payload]\n            }\n        case types.notesUpdate:\n            return{\n                ...state,\n                //seleccionamos solo la nota que nos interesa\n                notes:state.notes.map(\n                    note=> note.id === action.payload.id\n                        ? action.payload.note\n                        :note\n                )\n            }\n\n        case types.notesDelete:\n            return{\n                ...state,\n                active:null,\n                notes:state.notes.filter(note=> note.id !== action.payload)//purgar el resto de notas\n            }\n        case types.notesLogoutCleaning:\n            return{\n                ...state,\n                active:null,\n                notes:[],\n            }\n        \n        default:\n            return state;\n    }\n\n}","import { authReducer } from \"../reducers/authReducer\";\nimport thunk from 'redux-thunk';\nimport { uiReducer } from \"../reducers/uiReducer\";\nimport { notesReducer } from \"../reducers/notesReducer\";\nconst { createStore,combineReducers, applyMiddleware,compose } = require(\"redux\");\n\n//recibe solo un reducer asi que combinamos aparte varios\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer,\n})\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;//linea para devtools de redux\n\nexport const store= createStore(\n    reducers,\n    //configuracion para manejar acciones asincronas\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './routers/AppRouter'\nimport { store } from './store/store'\n\nexport const JournalApp = () => {\n    return (\n        //implementacion del store\n            <Provider store={store}>\n                <AppRouter/>\n            </Provider>\n        \n    )\n}\n","import { types } from '../types/types';\n\nexport const authReducer = (state={},action) => {\n        switch (action.type) {\n            case types.login:\n                return {\n                    uid:action.payload.uid,\n                    name:action.payload.displayName\n                }\n            case types.logout:\n                return {}\n            default:\n                return state;\n        }\n   \n}\n","import React from 'react'\nimport ReactDom from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDom.render(\n    <JournalApp/>,\n    document.getElementById('root')\n);"],"sourceRoot":""}